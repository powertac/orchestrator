services:

  ui:
    image: "powertac/ui:${UI_VERSION}"
    volumes:
      - "./discovery.json:/opt/powertac/ui/discovery.json"
    ports:
      - "127.0.0.1:${UI_HOST_PORT}:80"

  orchestrator:
    depends_on:
      orchestrator_db:
        condition: service_healthy
    image: "powertac/orchestrator:${ORCHESTRATOR_VERSION}"
    volumes:
      - "./orchestrator.properties:/opt/powertac/orchestrator/application.properties"
      - "${ORCHESTRATOR_ROOT_PATH}:/var/opt/powertac"
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "127.0.0.1:${ORCHESTRATOR_HOST_PORT}:80"
    environment:
      ORCHESTRATOR_ROOT_PATH: "${ORCHESTRATOR_ROOT_PATH}"
      MYSQL_HOST: "orchestrator_db"
      MYSQL_PASSWORD: "${ORCHESTRATOR_DB_PASSWORD}"

  weather:
    depends_on:
      weather_db:
        condition: service_healthy
    image: "powertac/weatherserver:${WEATHER_SERVER_VERSION}"
    volumes:
      - "./weatherserver.properties:/opt/powertac/weatherserver/application.properties"
    ports:
      - "127.0.0.1:${WEATHER_SERVER_HOST_PORT}:80"
    environment:
      MYSQL_HOST: "weather_db"
      MYSQL_PASSWORD: "${WEATHER_DB_PASSWORD}"

  orchestrator_db:
    image: "mariadb:${MARIADB_VERSION}"
    volumes:
      - "${ORCHESTRATOR_DB_STORAGE_PATH}:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: powertac_orchestrator
      MYSQL_USER: powertac_orchestrator
      MYSQL_PASSWORD: "${ORCHESTRATOR_DB_PASSWORD}"
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    healthcheck:
      test: "/usr/bin/mysql -upowertac_orchestrator -p${ORCHESTRATOR_DB_PASSWORD} --execute \"USE powertac_orchestrator;\""
      start_period: 30s
      interval: 15s
      timeout: 2s
      retries: 10

  weather_db:
    image: "mariadb:${MARIADB_VERSION}"
    volumes:
      - "${WEATHER_DB_STORAGE_PATH}:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: powertac_weather
      MYSQL_USER: powertac_weather
      MYSQL_PASSWORD: "${WEATHER_DB_PASSWORD}"
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    healthcheck:
      test: "/usr/bin/mysql -upowertac_weather -p${WEATHER_DB_PASSWORD} --execute \"USE powertac_weather;\""
      start_period: 30s
      interval: 15s
      timeout: 2s
      retries: 10